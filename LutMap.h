#ifndef LUTMAP_H
#define LUTMAP_H

/// @file LutMap.h
/// @brief LutMap のヘッダファイル
/// @author Yusuke Matsunaga (松永 裕介)
///
/// Copyright (C) 2013 Yusuke Matsunaga
/// All rights reserved.


#include "YmTools.h"
#include "GbmMgr.h"
#include "GbmSolver.h"


BEGIN_NAMESPACE_YM

//////////////////////////////////////////////////////////////////////
/// @class LutMap LutMap.h "LutMap.h"
/// @brief LUT マクロに対するマッチングを行なうクラス
//////////////////////////////////////////////////////////////////////
class LutMap
{
public:

  /// @brief コンストラクタ
  LutMap();

  /// @brief デストラクタ
  virtual
  ~LutMap();


public:
  //////////////////////////////////////////////////////////////////////
  // 外部インターフェイス
  //////////////////////////////////////////////////////////////////////

  /// @brief マッチングを行なう．
  /// @param[in] f マッチング対象の関数
  /// @param[in] solver マッチングを行なうオブジェクト
  /// @return 成功したら true を返す．
  bool
  matching(const TvFunc& f,
	   GbmSolver& solver);


protected:
  //////////////////////////////////////////////////////////////////////
  // 継承クラスから用いられる関数
  //////////////////////////////////////////////////////////////////////

  /// @brief GbmMgr を返す．
  GbmMgr&
  mgr();


private:
  //////////////////////////////////////////////////////////////////////
  // 内部で用いられる関数
  //////////////////////////////////////////////////////////////////////

  /// @brief LUT マクロの入力数を返す．
  virtual
  ymuint
  input_num() const = 0;

  /// @brief LUT マクロを作る．
  /// @param[in] inputs 入力ハンドルの配列
  /// @return 根のハンドルを返す．
  virtual
  GbmNodeHandle
  gen_macro(const vector<GbmNodeHandle>& inputs) = 0;


private:
  //////////////////////////////////////////////////////////////////////
  // データメンバ
  //////////////////////////////////////////////////////////////////////

  // GbmMgr
  GbmMgr mMgr;

};


//////////////////////////////////////////////////////////////////////
// インライン関数の定義
//////////////////////////////////////////////////////////////////////

// @brief GbmMgr を返す．
inline
GbmMgr&
LutMap::mgr()
{
  return mMgr;
}

END_NAMESPACE_YM

#endif // LUTMAP_H
